name: Publish Python distribution to PyPI
on: push

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6"
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Test sources
        run: make test
      - name: Build a binary wheel and a source tarball
        run: make build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

#  publish-to-pypi:
#    name: >-
#      Publish Python 🐍 distribution 📦 to PyPI
#    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
#    needs:
#      - build
#    runs-on: ubuntu-latest
#    environment:
#      name: pypi
#      url: https://pypi.org/p/<package-name>  # Replace <package-name> with your PyPI project name
#    permissions:
#      id-token: write  # IMPORTANT: mandatory for trusted publishing
#
#    steps:
#      - name: Download all the dists
#        uses: actions/download-artifact@v3
#        with:
#          name: python-package-distributions
#          path: dist/
#      - name: Publish distribution 📦 to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#
#  github-release:
#    name: >-
#      Sign the Python 🐍 distribution 📦 with Sigstore
#      and upload them to GitHub Release
#    needs:
#      - publish-to-pypi
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write  # IMPORTANT: mandatory for making GitHub Releases
#      id-token: write  # IMPORTANT: mandatory for sigstore
#
#    steps:
#      - name: Download all the dists
#        uses: actions/download-artifact@v3
#        with:
#          name: python-package-distributions
#          path: dist/
#      - name: Sign the dists with Sigstore
#        uses: sigstore/gh-action-sigstore-python@v1.2.3
#        with:
#          inputs: >-
#            ./dist/*.tar.gz
#            ./dist/*.whl
#      - name: Upload artifact signatures to GitHub Release
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        # Upload to GitHub Release using the `gh` CLI.
#        # `dist/` contains the built packages, and the
#        # sigstore-produced signatures and certificates.
#        run: >-
#          gh release upload
#          '${{ github.ref_name }}' dist/**
#          --repo '${{ github.repository }}'

#  publish-to-testpypi:
#    name: Publish Python 🐍 distribution 📦 to TestPyPI
#    needs:
#      - build
#    runs-on: ubuntu-latest
#
#    environment:
#      name: testpypi
#      url: https://test.pypi.org/p/deckhouse
#
#    permissions:
#      id-token: write  # IMPORTANT: mandatory for trusted publishing
#
#    steps:
#      - name: Download all the dists
#        uses: actions/download-artifact@v3
#        with:
#          name: python-package-distributions
#          path: dist/
#      - name: Publish distribution 📦 to TestPyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          repository-url: https://test.pypi.org/legacy/